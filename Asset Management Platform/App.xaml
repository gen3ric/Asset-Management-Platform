<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Asset_Management_Platform"
             xmlns:conv="clr-namespace:Asset_Management_Platform.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:chart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart" 
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Asset_Management_Platform.App"
             StartupUri="MainWindow.xaml"
             d1p1:Ignorable="d"
             >
    <Application.Resources>
        <ResourceDictionary>
            <vm:ViewModelLocator xmlns:vm="clr-namespace:Asset_Management_Platform.ViewModel" x:Key="Locator" d:IsDataSource="True" />
            <conv:BoolToCollapsedConverter x:Key="BoolToCollapsedConverter" />
            <Style x:Key="MinimalChartStyle" TargetType="{x:Type chart:ChartBase}">
                <Setter Property="Width" Value="200" />
                <Setter Property="Height" Value="200" />
            </Style>


            <Color x:Key="ScreenerColor">#D6FCFF</Color>
            <SolidColorBrush x:Key="Screener.Background" Color="{StaticResource ScreenerColor}"/>

            <!--DataGridColumnHeader colors and brushes-->
            <Color x:Key="ColumnHeader.BackgroundTop">#8FF8FF</Color>
            <Color x:Key="ColumnHeader.BackgroundBottom">#8FF8FF</Color>
            <Color x:Key="ColumnHeader.BorderColor">#BA000000</Color>
            <Color x:Key="ColumnHeader.MouseOverTop">#5AF5FF</Color>
            <Color x:Key="ColumnHeader.MouseOverBottom">#5AF5FF</Color>
            <Color x:Key="Border.HeaderClickedColor">#5FEAFF</Color>
            <SolidColorBrush x:Key="ColumnHeader.BorderBrush" Color="{StaticResource ColumnHeader.BorderColor}"/>



            <!--DataGridRow colors and brushes-->
            <Color x:Key="Row.BackgroundTop">#D6FCFF</Color>
            <Color x:Key="Row.BackgroundBottom">#D6FCFF</Color>
            <Color x:Key="Row.AlternatingRowTop">Transparent</Color>
            <Color x:Key="Row.AlternatingRowBottom">Transparent</Color>
            <Color x:Key="Row.MouseOver">#A8D9FF</Color>
            <Color x:Key="Row.SelectedFocusedTop">#5DB2FF</Color>
            <Color x:Key="Row.SelectedFocusedBottom">#5DB2FF</Color>
            <Color x:Key="Row.SelectedUnfocusedTop">#74BDFF</Color>
            <Color x:Key="Row.SelectedUnfocusedBottom">#74BDFF</Color>
            <LinearGradientBrush x:Key="Row.NormalRowBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{StaticResource Row.AlternatingRowTop}" />
                <GradientStop Offset="1" Color="{StaticResource Row.AlternatingRowBottom}" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="Row.AlternatingRowBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{StaticResource Row.AlternatingRowTop}" />
                <GradientStop Offset="1" Color="{StaticResource Row.AlternatingRowBottom}" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="Row.SelectedRowBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{StaticResource Row.SelectedFocusedTop}" />
                <GradientStop Offset="1" Color="{StaticResource Row.SelectedFocusedBottom}" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="GridView.ColumnHeaderBrush"  StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{StaticResource ColumnHeader.BackgroundTop}" />
                <GradientStop Offset="1" Color="{StaticResource ColumnHeader.BackgroundBottom}" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="StockGridBackground">#EDEDED</SolidColorBrush>

            <!--BUTTON colors and brushes-->
            <Color x:Key="Button.BackgroundTop">#88F1FE</Color>
            <Color x:Key="Button.BackgroundBottom">#88F1FE</Color>
            <Color x:Key="Button.BorderColor">#55040000</Color>
            <Color x:Key="Button.MouseOverTopColor">#59EDFF</Color>
            <Color x:Key="Button.MouseOverBottomColor">#2DE8FF</Color>
            <Color x:Key="Button.DisabledTopColor">#DBFBFF</Color>
            <Color x:Key="Button.DisabledBottomColor">#DBFBFF</Color>
            <LinearGradientBrush x:Key="Button.BackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{StaticResource Button.BackgroundTop}" />
                <GradientStop Offset="1" Color="{StaticResource Button.BackgroundBottom}" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="Button.DisabledBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{StaticResource Button.DisabledTopColor}"/>
                <GradientStop Offset="0" Color="{StaticResource Button.DisabledBottomColor}"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="Button.BorderBrush" Opacity="1" Color="{StaticResource Button.BorderColor}" />

            <!--EXPERIMENTAL BUTTON COLORS AND BRUSHES-->
            <Color x:Key="ExperimentalTop" >Aqua</Color>
            <Color x:Key="ExperimentalBottom">Aquamarine</Color>
            <LinearGradientBrush x:Key="ExperimentBrush" StartPoint="0,0.5" EndPoint="1,0.5">
                <GradientStop Offset="0" Color="{StaticResource ExperimentalTop}"/>
                <GradientStop Offset="0" Color="{StaticResource ExperimentalBottom}"/>
            </LinearGradientBrush>

            <!--LimitBox ListView Colors and Brushes-->
            <Color x:Key="LimitBoxBackground">#C5F8FE</Color>
            <SolidColorBrush x:Key="LimitBoxBackgroundBrush" Color="{StaticResource LimitBoxBackground}"/>

            <!--Override system colors-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />

            <!--Icons Go Here-->
            <Canvas x:Key="DollarCircle" x:Name="appbar_billing" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="20" Height="20" Canvas.Left="38" Canvas.Top="18" Stretch="Fill" Fill="#9A000000" Data="F1 M 58,38C 58,26.9543 49.0457,18 38,18L 38,24C 45.732,24 52,30.268 52,38L 58,38 Z "/>
                <Path Width="10.1005" Height="14.1421" Canvas.Left="47.8995" Canvas.Top="38" Stretch="Fill" Fill="#4D000000" Data="F1 M 58,38L 52,38C 52,41.866 50.433,45.366 47.8995,47.8995L 52.1421,52.1421C 55.7614,48.5229 58,43.5229 58,38 Z "/>
                <Path Width="34.1421" Height="40" Canvas.Left="18" Canvas.Top="18" Stretch="Fill" Fill="#FF000000" Data="F1 M 47.8995,47.8995L 52.1421,52.1421C 48.5229,55.7614 43.5228,58 38,58C 26.9543,58 18,49.0457 18,38C 18,26.9543 26.9543,18 38,18L 38,24C 30.268,24 24,30.268 24,38C 24,45.732 30.268,52 38,52C 41.866,52 45.366,50.433 47.8995,47.8995 Z M 38.92,46.1787L 38.92,48.65L 37.24,48.65L 37.24,46.25C 35.6075,46.2425 34.0875,45.8838 32.68,45.1738L 32.68,41.93C 33.1475,42.325 33.8431,42.6913 34.7669,43.0288C 35.6906,43.3663 36.515,43.56 37.24,43.61L 37.24,39.1813C 35.39,38.5038 34.1275,37.7688 33.4525,36.9763C 32.7775,36.1838 32.44,35.2188 32.44,34.0813C 32.44,32.8563 32.8787,31.8131 33.7562,30.9519C 34.6337,30.0906 35.795,29.59 37.24,29.45L 37.24,27.29L 38.92,27.29L 38.92,29.4013C 40.5275,29.4788 41.7275,29.74 42.52,30.185L 42.52,33.29C 41.4525,32.635 40.2525,32.235 38.92,32.09L 38.92,36.6613C 40.6325,37.2738 41.8606,37.9744 42.6044,38.7631C 43.3481,39.5519 43.72,40.505 43.72,41.6225C 43.72,42.9125 43.3056,43.9519 42.4769,44.7406C 41.6481,45.5294 40.4625,46.0088 38.92,46.1787 Z M 37.24,35.9713L 37.24,32.1388C 36.12,32.3413 35.56,32.925 35.56,33.89C 35.56,34.7225 36.12,35.4163 37.24,35.9713 Z M 38.92,39.8525L 38.92,43.565C 40.04,43.385 40.6,42.8013 40.6,41.8138C 40.6,41.0138 40.04,40.36 38.92,39.8525 Z "/>
            </Canvas>
            <Canvas x:Key="CheckMark" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="37.9998" Height="31.6665" Canvas.Left="19.0001" Canvas.Top="22.1668" Stretch="Fill" Fill="{StaticResource  StockGridBackground}" Data="F1 M 23.7501,33.25L 34.8334,44.3333L 52.2499,22.1668L 56.9999,26.9168L 34.8334,53.8333L 19.0001,38L 23.7501,33.25 Z "/>
            </Canvas>


            <!--Main Button Style-->
            <Style TargetType="{x:Type Button}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Thin"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Margin" Value="2,0,2,0"/>
                <Setter Property="IsTabStop" Value="True"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.BorderBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Button_Border"
                                    Background="{StaticResource Button.BackgroundBrush}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="5,2,5,2">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Button_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.5"
                                                                         Value="{StaticResource Button.MouseOverTopColor}">
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2" />
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Button_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.5"
                                                                         Value="{StaticResource Button.MouseOverBottomColor}">
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2" />
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Button_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.1"
                                                                         Value="{StaticResource Button.DisabledTopColor}">
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2" />
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Button_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.1"
                                                                         Value="{StaticResource Button.DisabledTopColor}">
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2" />
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Execute Order Button Style-->
            <Style x:Key="ExecuteButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontWeight" Value="Thin"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.BorderBrush}" />
                <Setter Property="Margin" Value="2,0,2,0"/>
                <Setter Property="IsTabStop" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="ExecuteButton_Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="5,2,5,2">
                                <Border.Background>
                                    <LinearGradientBrush x:Name="ExecuteButtonBrush" StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop x:Name="OffsetOne" Offset="0" Color="{StaticResource Button.MouseOverBottomColor}"/>
                                        <GradientStop x:Name="OffsetTwo" Offset="0" Color="{StaticResource Button.MouseOverTopColor}" />
                                        <GradientStop x:Name="OffsetThree" Offset="0" Color="{StaticResource Button.BackgroundBottom}" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffsetTwo"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 Duration="0:0:1.0">
                                                    <EasingDoubleKeyFrame Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffsetThree"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 Duration="0:0:1.0">
                                                    <EasingDoubleKeyFrame Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExecuteButton_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.1"
                                                                         Value="{StaticResource Button.DisabledTopColor}">
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2" />
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExecuteButton_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.1"
                                                                         Value="{StaticResource Button.DisabledTopColor}">
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2" />
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExecuteButton_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.1"
                                                                         Value="{StaticResource Button.DisabledTopColor}">
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2" />
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--All textblock style-->
            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="FontSize" Value="13"/>
            </Style>

            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="FontSize" Value="13"/>
            </Style>

            <!--EXPERIMENTAL BUTTON STYLE-->
            <Style x:Key="ButtonStyleExperimental" TargetType="{x:Type Button}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Thin"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.BorderBrush}" />
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="ThisButton"
                                    Padding="5,2,5,2"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.Background>
                                    <LinearGradientBrush x:Name="ThisButtonBrush" StartPoint="0,0.5" EndPoint="1,0.5">
                                        <!--<GradientStop x:Name="OffsetOne" Offset="0" Color="Black"/>
                                        <GradientStop x:Name="OffsetTwo" Offset="0" Color="{StaticResource ExperimentalTop}" />
                                        <GradientStop x:Name="OffsetThree" Offset="0" Color="Purple" />
                                        <GradientStop x:Name="OffsetFour" Offset="0" Color="Pink" />
                                        <GradientStop x:Name="OffsetFive" Offset="0" Color="Orange" />-->
                                        <GradientStop x:Name="OffsetSix" Offset="0" Color="{StaticResource Button.BackgroundBottom}" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="Button_ScaleTransform" />
                                </Border.RenderTransform>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="MouseOver" To="Normal" GeneratedDuration="0:0:0.75"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame Value="0.95"
                                                                          KeyTime="0:0:0.2"/>
                                                    <EasingDoubleKeyFrame Value="1"
                                                                          KeyTime="0:0:0.75">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <!--<Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffsetTwo"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 Duration="0:0:1.0">
                                                    <EasingDoubleKeyFrame Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                                
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffsetThree"
                                                                               Storyboard.TargetProperty="Offset"
                                                                               BeginTime="0:0:1.0"
                                                                               Duration="0:0:1.0">
                                                    <EasingDoubleKeyFrame Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>

                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffsetFour"
                                                                 Storyboard.TargetProperty="Offset"
                                                                               BeginTime="0:0:2.0"
                                                                 Duration="0:0:1.0">
                                                    <EasingDoubleKeyFrame Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>

                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffsetFive"
                                                                 Storyboard.TargetProperty="Offset"
                                                                               BeginTime="0:0:3.0"
                                                                 Duration="0:0:1.0">
                                                    <EasingDoubleKeyFrame Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>

                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OffsetSix"
                                                                 Storyboard.TargetProperty="Offset"
                                                                               BeginTime="0:0:4.0"
                                                                 Duration="0:0:1.0">
                                                    <EasingDoubleKeyFrame Value="1">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>-->
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Security Data Grid Header Style-->
            <Style x:Key="HeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="30" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="IsTabStop" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock TextWrapping="WrapWithOverflow" Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Border x:Name="headerBorder"
                                        BorderThickness="0,1,0,1"
                                        BorderBrush="{StaticResource ColumnHeader.BorderBrush}"
                                        Padding="3,0,3,0"
                                    Background="{StaticResource GridView.ColumnHeaderBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="headerBorder"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="{StaticResource ColumnHeader.MouseOverTop}" >
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="headerBorder"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="{StaticResource ColumnHeader.MouseOverBottom}" >
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="headerBorder"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.0"
                                                                         Value="{StaticResource Border.HeaderClickedColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border x:Name="CellBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0">
                                <ContentPresenter VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CellStyleCentered" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource CellStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border x:Name="CellBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0">
                                <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CellStyleRight" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource CellStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border x:Name="CellBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0">
                                <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Right"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--SecurityDataGrid Row Style-->
            <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
                <Setter Property="Height" Value="25" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="DataContext" Value="{Binding Main.SecurityList, Source={StaticResource Locator}}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Foreground="Red"
                                       Margin="2,0,0,0"
                                       Text="!"
                                       VerticalAlignment="Center" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                                    BorderBrush="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="{StaticResource Row.BackgroundTop}" />
                                        <GradientStop Offset="1" Color="{StaticResource Row.BackgroundBottom}" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Normal_AlternatingRow">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource Row.AlternatingRowTop}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource Row.AlternatingRowBottom}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard >
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                        Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                         Value="{StaticResource Row.MouseOver}" >
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                        Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.2"
                                                                         Value="{StaticResource Row.MouseOver}" >
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver_Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.0"
                                                                         Value="{StaticResource Row.SelectedFocusedTop}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.0"
                                                                         Value="{StaticResource Row.SelectedFocusedBottom}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Normal_Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.0"
                                                                         Value="{StaticResource Row.SelectedUnfocusedTop}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.0"
                                                                         Value="{StaticResource Row.SelectedUnfocusedBottom}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver_Unfocused_Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.0"
                                                                         Value="{StaticResource Row.SelectedUnfocusedTop}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.0"
                                                                         Value="{StaticResource Row.SelectedUnfocusedBottom}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Row="0"
                                                            Grid.Column="1"
                                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            VerticalContentAlignment="Center" />
                                    <DataGridDetailsPresenter Grid.Row="1"
                                                              Grid.Column="1"
                                                              SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                              Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.Row="0"
                                                       Grid.Column="0"
                                                       Grid.RowSpan="2"
                                                       SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                       Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <!--<DataTrigger Binding="{Binding Hidden, Converter={StaticResource BoolToCollapsedConverter}, NotifyOnSourceUpdated=True, Mode=OneTime}" 
                                 Value="True">

                    </DataTrigger>-->
                    <DataTrigger Binding="{Binding Hidden, NotifyOnSourceUpdated=True}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Hidden, NotifyOnSourceUpdated=True}" Value="False">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>

                </Style.Triggers>

            </Style>

            <!--Limit Orders Datagrid Row Style-->
            <Style x:Key="LimitOrderRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource RowStyle}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Thin"/>
                <Setter Property="IsTabStop" Value="False"/>
            </Style>

            <!--Limit Orders Header Style-->
            <Style x:Key="LimitOrderHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource HeaderStyle}">
                <Setter Property="Height" Value="25" />
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Border x:Name="headerBorder"
                                        BorderThickness="0,1,0,1"
                                        BorderBrush="{StaticResource ColumnHeader.BorderBrush}"
                                        Padding="3,0,3,0"
                                    Background="{StaticResource GridView.ColumnHeaderBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="headerBorder"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="{StaticResource ColumnHeader.MouseOverTop}" >
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="headerBorder"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="{StaticResource ColumnHeader.MouseOverBottom}" >
                                                        <EasingColorKeyFrame.EasingFunction>
                                                            <PowerEase Power="2"/>
                                                        </EasingColorKeyFrame.EasingFunction>
                                                    </EasingColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="headerBorder"
                                                                              Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="0:0:0.0"
                                                                         Value="{StaticResource Border.HeaderClickedColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ComboBox Style, Modified Default Template-->
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="FontWeight" Value="Thin"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="IsTabStop" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" 
                                  BorderBrush="{TemplateBinding BorderBrush}" 
                                  BorderThickness="{TemplateBinding BorderThickness}" 
                                  Background="{TemplateBinding Background}" 
                                  Grid.ColumnSpan="2" 
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="{StaticResource Button.BackgroundTop}" Offset="0"/>
                                                                    <GradientStop Color="{StaticResource Button.BackgroundBottom}" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="{StaticResource Button.MouseOverTopColor}" Offset="0"/>
                                                                            <GradientStop Color="{StaticResource Button.MouseOverBottomColor}" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="{StaticResource Button.MouseOverTopColor}" Offset="0"/>
                                                                            <GradientStop Color="{StaticResource Button.MouseOverBottomColor}" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                                <Setter Property="Background" TargetName="splitBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--GroupBox Style-->
            <Style x:Key="MyGroupBoxStyle"  TargetType="{x:Type GroupBox}">
                <Setter Property="BorderBrush" Value="{StaticResource Button.BackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock FontWeight="Thin"
                                       FontSize="18"
                                       HorizontalAlignment="Center"
                                       Text="{Binding}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>